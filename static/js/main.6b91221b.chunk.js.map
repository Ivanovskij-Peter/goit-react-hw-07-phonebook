{"version":3,"sources":["components/redux/actions.js","components/filter/Filter.js","components/contacts-operations.js","components/contacts/ContactsForm.js","components/contacts/ContactsItems.js","components/phonebook/PhoneBook.js","components/App.js","components/redux/redusers.js","components/redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","mapDispatchToProps","actions","connect","state","contacts","filter","style","display","marginTop","marginBottom","width","type","name","value","onChange","e","target","placeholder","axios","defaults","baseURL","addContact","number","id","dispatch","contact","post","then","data","catch","error","deleteContact","contactId","delete","fetchContacts","get","ContactsForm","handleChange","event","setState","handleSubmit","preventDefault","props","uuidv4","onSubmit","this","border","height","backgroundColor","color","Component","contactsItems","TransitionGroup","component","className","item","toLowerCase","includes","filtredArr","map","el","CSSTransition","key","timeout","classNames","onClick","PhoneBook","isExsist","in","appear","unmountOnExit","operations","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"sTAEaA,EAAuBC,YAClC,iCAEWC,EAAsBD,YAAa,gCAEnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,+BAEjCI,EAAoBJ,YAAa,+BACjCK,EAAkBL,YAAa,6BAE/BM,EAAuBN,YAClC,kCAGWO,EAAuBP,YAClC,kCAEWQ,EAAqBR,YAAa,gCAIlCS,GAFgBT,YAAa,oBAEdA,YAAa,qBCFzC,IAIMU,EAAqB,CACzBD,aAAcE,GAGDC,eARS,SAAAC,GACtB,MAAO,CAAEC,SAAUD,EAAMC,SAASA,YAOIJ,EAAzBE,EA3Bf,YAA2C,IAAzBG,EAAwB,EAAxBA,OAAQN,EAAgB,EAAhBA,aACxB,OACE,oCACE,2BACEO,MAAO,CACLC,QAAS,QACTC,UAAW,MACXC,aAAc,OACdC,MAAO,QAETC,KAAK,OACLC,KAAK,SACLC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIhB,EAAagB,EAAEC,OAAOH,QACrCI,YAAY,qB,gCCLpBC,IAAMC,SAASC,QAAU,wBAEzB,IA0Be,GACbC,WAnBiB,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMU,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OAA0B,SAAAC,GAC3C,IAAMC,EAAU,CAAEb,OAAMU,SAAQC,MAEhCC,EAAS/B,KACTyB,IACGQ,KAAK,YAAaD,GAClBE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAS9B,EAAkBkC,OAC9CC,OAAM,SAAAC,GAAK,OAAIN,EAAS7B,EAAgBmC,SAa3CC,cAVoB,SAAAC,GAAS,OAAI,SAAAR,GACjCA,EAAS5B,KACTsB,IACGe,OADH,oBACuBD,IACpBL,MAAK,kBAAMH,EAAS3B,EAAqBmC,OACzCH,OAAM,SAAAC,GAAK,OAAIN,EAAS1B,EAAmBgC,SAM9CI,cA7BoB,kBAAM,SAAAV,GAC1BA,EAASnC,KACT6B,IACGiB,IAAI,aACJR,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASjC,EAAoBqC,OAChDC,OAAM,SAAAC,GAAK,OAAIN,EAAShC,EAAkBsC,UCfzCM,E,4MACJjC,MAAQ,CACNC,SAAU,GACVQ,KAAM,GACNU,OAAQ,I,EAEVe,aAAe,SAAAC,GACb,IAAM1B,EAAO0B,EAAMtB,OAAOJ,KAC1B,EAAK2B,SAAL,eAAiB3B,EAAO0B,EAAMtB,OAAOH,S,EAGvC2B,aAAe,SAAAF,GACbA,EAAMG,iBACN,EAAKC,MAAMrB,WAAW,CACpBT,KAAM,EAAKT,MAAMS,KACjBW,GAAIoB,cACJrB,OAAQ,EAAKnB,MAAMmB,SAErB,EAAKiB,SAAS,CACZ3B,KAAM,GACNU,OAAQ,M,uDAIV,OACE,0BACEsB,SAAUC,KAAKL,aACflC,MAAO,CACLwC,OAAQ,oBACRpC,MAAO,QACPqC,OAAQ,UAGV,uCACA,2BACEnC,KAAK,OACLN,MAAO,CACLC,QAAS,QACTC,UAAW,MACXC,aAAc,OACdC,MAAO,QAETO,YAAY,WACZJ,MAAOgC,KAAK1C,MAAMS,KAClBE,SAAU+B,KAAKR,eAEjB,yCACA,2BACEzB,KAAK,SACLN,MAAO,CACLC,QAAS,QACTC,UAAW,MACXC,aAAc,OACdC,MAAO,QAETO,YAAY,aACZJ,MAAOgC,KAAK1C,MAAMmB,OAClBR,SAAU+B,KAAKR,eAEjB,4BACE/B,MAAO,CACLE,UAAW,OACXE,MAAO,OACPsC,gBAAiB,OACjBC,MAAO,QACPF,OAAQ,SANZ,oB,GA3DmBG,aA2EZhD,cAAQ,KAAMmB,EAAdnB,CAA0BkC,G,wBClDzC,IAOelC,eAPS,SAAAC,GAAK,MAAK,CAChCgD,cAAehD,EAAMC,SACrBC,OAAQF,EAAME,WAEW,SAAAmB,GAAQ,MAAK,CACtCO,cAAe,SAAAR,GAAE,OAAIC,EAASO,EAAcA,cAAcR,QAE7CrB,EAxBf,YAAkE,IAAzCiD,EAAwC,EAAxCA,cAAepB,EAAyB,EAAzBA,cAAe1B,EAAU,EAAVA,OACrD,OACE,kBAAC+C,EAAA,EAAD,CAAiBC,UAAU,KAAKC,UAAU,QAT3B,SAACH,EAAe9C,GACjC,OAAOA,EACH8C,EAAc9C,QAAO,SAAAkD,GAAI,OACvBA,EAAK3C,KAAK4C,cAAcC,SAASpD,EAAOmD,kBAE1CL,EAKCO,CAAWP,EAAe9C,GAAQsD,KAAI,SAAAC,GAAE,OACvC,kBAACC,EAAA,EAAD,CAAeC,IAAKF,EAAGrC,GAAIwC,QAAS,IAAKC,WAAW,aAClD,wBAAIF,IAAKF,EAAGrC,GAAI+B,UAAU,QACxB,2BAAIM,EAAGhD,MACP,2BAAIgD,EAAGtC,QACP,4BAAQgC,UAAU,MAAMW,QAAS,kBAAMlC,EAAc6B,EAAGrC,MAAxD,cCZN2C,G,kNACJ/D,MAAQ,CACNgE,UAAU,G,kEAGVtB,KAAKH,MAAMR,kB,+BAIX,OACE,yBAAKoB,UAAU,aACb,kBAACO,EAAA,EAAD,CACEO,IAAI,EACJC,QAAQ,EACRL,WAAW,gBACXD,QAAS,IACTO,eAAa,GAEb,wBAAIhB,UAAU,SAAd,cAEF,kBAACO,EAAA,EAAD,CACEO,GAAIvB,KAAK1C,MAAMgE,SACfH,WAAW,QACXD,QAAS,IACTO,eAAa,GAEb,wBAAIhB,UAAU,SAAd,sCAEF,kBAAC,EAAD,MACA,kBAACO,EAAA,EAAD,CAEEO,GAA0B,KAAtBvB,KAAKH,MAAMrC,OACf0D,QAAS,IACTO,eAAa,GAEb,kBAAC,EAAD,OAEF,kBAAC,EAAD,W,GArCgBpB,cAkDThD,eARS,SAAAC,GAAK,MAAK,CAChCgD,cAAehD,EAAMC,SAASA,SAC9BC,OAAQF,EAAMC,SAASC,WAEE,SAAAmB,GAAQ,MAAK,CACtCU,cAAe,kBAAMV,EAAS+C,EAAWrC,qBAG5BhC,CAA6CgE,GChD7CM,I,IAAAA,EARf,WACE,OACE,oCACE,kBAAC,EAAD,Q,+CCSApE,EAAWqE,YAAc,IAAD,mBAC3BlF,GAAsB,SAACmF,EAAD,YAAMC,WADD,cAG3BjF,GAAoB,SAACS,EAAD,OAAUwE,EAAV,EAAUA,QAAV,4BAA4BxE,GAA5B,CAAmCwE,OAH5B,cAK3B9E,GAAuB,SAACM,EAAD,OAAUwE,EAAV,EAAUA,QAAV,OACtBxE,EAAME,QAAO,qBAAGkB,KAAgBoD,QANN,IASxBC,EAAUH,aAAc,GAAD,mBAC1BhF,GAAoB,kBAAM,KADA,cAE1BC,GAAoB,kBAAM,KAFA,cAG1BC,GAAkB,kBAAM,KAHE,cAI1BC,GAAuB,kBAAM,KAJH,cAK1BC,GAAuB,kBAAM,KALH,cAM1BC,GAAqB,kBAAM,KAND,cAO1BT,GAAuB,kBAAM,KAPH,cAQ1BE,GAAsB,kBAAM,KARF,cAS1BC,GAAoB,kBAAM,KATA,IAYvBa,EAASoE,YAAc,GAAD,eACzB1E,GAAe,SAAC2E,EAAD,YAAMC,YAGTE,cAAgB,CAC7BzE,WACAC,SACAuE,YC/BIE,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MASaC,EANDC,YAAe,CAC3BC,QAASvF,EACT0E,aACAc,UAAUC,IChBZC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GAEf,kBAAC,EAAD,OAGFO,SAASC,eAAe,W","file":"static/js/main.6b91221b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\n\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactsRequest');\n\nexport const addContactSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactError = createAction('contacts/addContactsError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\n\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactsError');\n\nexport const deleteContact = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/filter');\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\n\nfunction Filter({ filter, changeFilter }) {\n  return (\n    <>\n      <input\n        style={{\n          display: 'block',\n          marginTop: '5px',\n          marginBottom: '10px',\n          width: '100%',\n        }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n        placeholder=\"find contact\"\n      ></input>\n    </>\n  );\n}\nconst mapStateToProps = state => {\n  return { contacts: state.contacts.contacts };\n};\n\nconst mapDispatchToProps = {\n  changeFilter: actions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from '../components/redux/actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact = ({ name, number, id }) => dispatch => {\n  const contact = { name, number, id };\n\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  addContact,\n  deleteContact,\n  fetchContacts,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport addContact from '../contacts-operations';\nimport { connect } from 'react-redux';\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact({\n      name: this.state.name,\n      id: uuidv4(),\n      number: this.state.number,\n    });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        style={{\n          border: '1px solid whisper',\n          width: '400px',\n          height: '165px',\n        }}\n      >\n        <label>Name</label>\n        <input\n          name=\"name\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n        ></input>\n        <label>Number</label>\n        <input\n          name=\"number\"\n          style={{\n            display: 'block',\n            marginTop: '5px',\n            marginBottom: '10px',\n            width: '100%',\n          }}\n          placeholder=\"add number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n        ></input>\n        <button\n          style={{\n            marginTop: '15px',\n            width: '100%',\n            backgroundColor: 'blue',\n            color: 'white',\n            height: '35px',\n          }}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, addContact)(ContactsForm);\n","import React from 'react';\nimport './ContactsItems.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport deleteContact from '../contacts-operations';\n\nconst filtredArr = (contactsItems, filter) => {\n  return filter\n    ? contactsItems.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()),\n      )\n    : contactsItems;\n};\nfunction ContactsItems({ contactsItems, deleteContact, filter }) {\n  return (\n    <TransitionGroup component=\"ul\" className=\"list\">\n      {filtredArr(contactsItems, filter).map(el => (\n        <CSSTransition key={el.id} timeout={300} classNames=\"list-fade\">\n          <li key={el.id} className=\"item\">\n            <p>{el.name}</p>\n            <p>{el.number}</p>\n            <button className=\"btn\" onClick={() => deleteContact(el.id)}>\n              X\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts,\n  filter: state.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsItems);\n","import React, { Component } from 'react';\nimport Filter from '../filter/Filter';\nimport ContactsForm from '../contacts/ContactsForm';\nimport ContactsItems from '../contacts/ContactsItems';\nimport './PhoneBook.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport operations from '../contacts-operations';\n\nclass PhoneBook extends Component {\n  state = {\n    isExsist: false,\n  };\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"Phone-slideIn\"\n          timeout={1000}\n          unmountOnExit\n        >\n          <h1 className=\"Phone\">PhoneBook</h1>\n        </CSSTransition>\n        <CSSTransition\n          in={this.state.isExsist}\n          classNames=\"alert\"\n          timeout={500}\n          unmountOnExit\n        >\n          <h2 className=\"alert\">This name is already in contacts!</h2>\n        </CSSTransition>\n        <ContactsForm />\n        <CSSTransition\n          //\n          in={this.props.filter !== ''}\n          timeout={500}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <ContactsItems />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contactsItems: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\n","import React from 'react';\nimport PhoneBook from './phonebook/PhoneBook';\n\nfunction App() {\n  return (\n    <>\n      <PhoneBook />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contacts from './redusers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: contacts,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './components/redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\n    <App />\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}